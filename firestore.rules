rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if user is authenticated (including anonymous)
    function isAuthenticated() {
      return request.auth != null;
    }

    match /services/{serviceId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /interest-areas/{areaId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /service-interest-areas/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /metadata/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /ratings/{ratingId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if isAdmin() || 
        (request.auth != null && request.auth.uid == resource.data.userId);
    }
    
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if isAdmin() || 
        (request.auth != null && request.auth.uid == userId);
      allow delete: if isAdmin();
    }
  }
}